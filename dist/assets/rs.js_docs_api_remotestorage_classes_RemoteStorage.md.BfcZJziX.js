import{_ as e,c as a,o as s,a5 as t}from"./chunks/framework.CTkMpXT2.js";const g=JSON.parse('{"title":"Class: RemoteStorage","titleTemplate":"remoteStorage.js","description":"","frontmatter":{},"headers":[],"relativePath":"rs.js/docs/api/remotestorage/classes/RemoteStorage.md","filePath":"rs.js/docs/api/remotestorage/classes/RemoteStorage.md"}'),i={name:"rs.js/docs/api/remotestorage/classes/RemoteStorage.md"},n=t(`<h1 id="class-remotestorage" tabindex="-1">Class: RemoteStorage <a class="header-anchor" href="#class-remotestorage" aria-label="Permalink to &quot;Class: RemoteStorage&quot;">​</a></h1><p>Create a <code>remoteStorage</code> class instance so:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> remoteStorage</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RemoteStorage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><p>The constructor can optionally be called with a configuration object. This example shows all default values:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> remoteStorage</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RemoteStorage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  cache: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  changeEvents: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    local:    </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    window:   </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    remote:   </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    conflict: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  cordovaRedirectUri: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">undefined</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  logging: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  modules: []</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p>In the current version, it is only possible to use a single <code>remoteStorage</code> instance. You cannot connect to two different remotes in parallel yet. We intend to support this eventually.</p></div><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p>For the change events configuration, you have to set all events explicitly. Otherwise it disables the unspecified ones.</p></div><h2 id="events" tabindex="-1">Events <a class="header-anchor" href="#events" aria-label="Permalink to &quot;Events&quot;">​</a></h2><p>You can add event handlers to your <code>remoteStorage</code> instance by using the <a href="./RemoteStorage.html#on">on</a> function. For example:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">remoteStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;connected&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Storage account has been connected, let’s roll!</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h3 id="ready" tabindex="-1"><code>ready</code> <a class="header-anchor" href="#ready" aria-label="Permalink to &quot;\`ready\`&quot;">​</a></h3><p>Emitted when all features are loaded and the RS instance is ready to be used in your app</p><h3 id="not-connected" tabindex="-1"><code>not-connected</code> <a class="header-anchor" href="#not-connected" aria-label="Permalink to &quot;\`not-connected\`&quot;">​</a></h3><p>Emitted when ready, but no storage connected (&quot;anonymous mode&quot;)</p><h3 id="connected" tabindex="-1"><code>connected</code> <a class="header-anchor" href="#connected" aria-label="Permalink to &quot;\`connected\`&quot;">​</a></h3><p>Emitted when a remote storage has been connected</p><h3 id="disconnected" tabindex="-1"><code>disconnected</code> <a class="header-anchor" href="#disconnected" aria-label="Permalink to &quot;\`disconnected\`&quot;">​</a></h3><p>Emitted after disconnect</p><h3 id="error" tabindex="-1"><code>error</code> <a class="header-anchor" href="#error" aria-label="Permalink to &quot;\`error\`&quot;">​</a></h3><p>Emitted when an error occurs; receives an error object as argument</p><p>There are a handful of known errors, which are identified by the <code>name</code> property of the error object:</p><ul><li><p><code>Unauthorized</code></p><p>Emitted when a network request resulted in a 401 or 403 response. You can use this event to handle invalid OAuth tokens in custom UI (i.e. when a stored token has been revoked or expired by the RS server).</p></li><li><p><code>DiscoveryError</code></p><p>A variety of storage discovery errors, e.g. from user address input validation, or user address lookup issues</p></li></ul><h4 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">remoteStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;error&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">err</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(err));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   name: &quot;Unauthorized&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   message: &quot;App authorization expired or revoked.&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   stack: &quot;Error↵  at new a.Unauthorized (vendor.js:65710:41870)&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// }</span></span></code></pre></div><h3 id="connecting" tabindex="-1"><code>connecting</code> <a class="header-anchor" href="#connecting" aria-label="Permalink to &quot;\`connecting\`&quot;">​</a></h3><p>Emitted before webfinger lookup</p><h3 id="authing" tabindex="-1"><code>authing</code> <a class="header-anchor" href="#authing" aria-label="Permalink to &quot;\`authing\`&quot;">​</a></h3><p>Emitted before redirecting to the OAuth server</p><h3 id="wire-busy" tabindex="-1"><code>wire-busy</code> <a class="header-anchor" href="#wire-busy" aria-label="Permalink to &quot;\`wire-busy\`&quot;">​</a></h3><p>Emitted when a network request starts</p><h3 id="wire-done" tabindex="-1"><code>wire-done</code> <a class="header-anchor" href="#wire-done" aria-label="Permalink to &quot;\`wire-done\`&quot;">​</a></h3><p>Emitted when a network request completes</p><h3 id="sync-req-done" tabindex="-1"><code>sync-req-done</code> <a class="header-anchor" href="#sync-req-done" aria-label="Permalink to &quot;\`sync-req-done\`&quot;">​</a></h3><p>Emitted when a single sync request has finished. Callback functions receive an object as argument, informing the client of remaining items in the current sync task queue.</p><h4 id="example-1" tabindex="-1">Example <a class="header-anchor" href="#example-1" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">remoteStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;sync-req-done&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(result));</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// { tasksRemaining: 21 }</span></span></code></pre></div><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p>The internal task queue holds at most 100 items at the same time, regardless of the overall amount of items to sync. Therefore, this number is only an indicator of sync status, not a precise amount of items left to sync. It can be useful to determine if your app should display any kind of sync status/progress information for the cycle or not.</p></div><h3 id="sync-done" tabindex="-1"><code>sync-done</code> <a class="header-anchor" href="#sync-done" aria-label="Permalink to &quot;\`sync-done\`&quot;">​</a></h3><p>Emitted when a sync cycle has been completed and a new sync is scheduled.</p><p>The callback function receives an object as argument, informing the client if the sync process has completed successfully or not.</p><h4 id="example-2" tabindex="-1">Example <a class="header-anchor" href="#example-2" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">remoteStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;sync-done&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(result));</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// { completed: true }</span></span></code></pre></div><p>If <code>completed</code> is <code>false</code>, it means that some of the sync requests have failed and will be retried in the next sync cycle (usually a few seconds later in this case). This is not an unusual scenario on mobile networks or when doing a large initial sync for example.</p><p>For an app&#39;s user interface, you may want to consider the sync process as ongoing in this case, and wait until your app sees a positive <code>completed</code> status before updating the UI.</p><h3 id="network-offline" tabindex="-1"><code>network-offline</code> <a class="header-anchor" href="#network-offline" aria-label="Permalink to &quot;\`network-offline\`&quot;">​</a></h3><p>Emitted once when a wire request fails for the first time, and <code>remote.online</code> is set to false</p><h3 id="network-online" tabindex="-1"><code>network-online</code> <a class="header-anchor" href="#network-online" aria-label="Permalink to &quot;\`network-online\`&quot;">​</a></h3><p>Emitted once when a wire request succeeds for the first time after a failed one, and <code>remote.online</code> is set back to true</p><h3 id="sync-interval-change" tabindex="-1"><code>sync-interval-change</code> <a class="header-anchor" href="#sync-interval-change" aria-label="Permalink to &quot;\`sync-interval-change\`&quot;">​</a></h3><p>Emitted when the sync interval changes</p><h2 id="extends" tabindex="-1">Extends <a class="header-anchor" href="#extends" aria-label="Permalink to &quot;Extends&quot;">​</a></h2><ul><li><code>EventHandling</code></li></ul><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="access" tabindex="-1">access <a class="header-anchor" href="#access" aria-label="Permalink to &quot;access&quot;">​</a></h3><blockquote><p><strong>access</strong>: <a href="./../../access/classes/Access.html"><code>Access</code></a></p></blockquote><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/a199c15fb409a17fd444aa7fba846e7fecc5981d/src/remotestorage.ts#L295" target="_blank" rel="noreferrer">remotestorage.ts:295</a></p><hr><h3 id="backend" tabindex="-1">backend <a class="header-anchor" href="#backend" aria-label="Permalink to &quot;backend&quot;">​</a></h3><blockquote><p><strong>backend</strong>: <code>&quot;remotestorage&quot;</code> | <code>&quot;googledrive&quot;</code> | <code>&quot;dropbox&quot;</code></p></blockquote><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/a199c15fb409a17fd444aa7fba846e7fecc5981d/src/remotestorage.ts#L326" target="_blank" rel="noreferrer">remotestorage.ts:326</a></p><hr><h3 id="caching" tabindex="-1">caching <a class="header-anchor" href="#caching" aria-label="Permalink to &quot;caching&quot;">​</a></h3><blockquote><p><strong>caching</strong>: <a href="./../../caching/classes/Caching.html"><code>Caching</code></a></p></blockquote><h4 id="defined-in-2" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-2" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/a199c15fb409a17fd444aa7fba846e7fecc5981d/src/remotestorage.ts#L301" target="_blank" rel="noreferrer">remotestorage.ts:301</a></p><hr><h3 id="remote" tabindex="-1">remote <a class="header-anchor" href="#remote" aria-label="Permalink to &quot;remote&quot;">​</a></h3><blockquote><p><strong>remote</strong>: <a href="./../../remote/interfaces/Remote.html"><code>Remote</code></a></p></blockquote><p>Depending on the chosen backend, this is either an instance of <code>WireClient</code>, <code>Dropbox</code> or <code>GoogleDrive</code>.</p><p>See <a href="./../../remote/interfaces/Remote.html">Remote</a> for public API</p><h4 id="example-3" tabindex="-1">Example <a class="header-anchor" href="#example-3" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">remoteStorage.remote.connected</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// false</span></span></code></pre></div><h4 id="defined-in-3" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-3" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/a199c15fb409a17fd444aa7fba846e7fecc5981d/src/remotestorage.ts#L338" target="_blank" rel="noreferrer">remotestorage.ts:338</a></p><hr><h3 id="sync" tabindex="-1">sync <a class="header-anchor" href="#sync" aria-label="Permalink to &quot;sync&quot;">​</a></h3><blockquote><p><strong>sync</strong>: <code>Sync</code></p></blockquote><h4 id="defined-in-4" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-4" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/a199c15fb409a17fd444aa7fba846e7fecc5981d/src/remotestorage.ts#L298" target="_blank" rel="noreferrer">remotestorage.ts:298</a></p><h2 id="accessors" tabindex="-1">Accessors <a class="header-anchor" href="#accessors" aria-label="Permalink to &quot;Accessors&quot;">​</a></h2><h3 id="connected-1" tabindex="-1">connected <a class="header-anchor" href="#connected-1" aria-label="Permalink to &quot;connected&quot;">​</a></h3><blockquote><p><code>get</code> <strong>connected</strong>(): <code>boolean</code></p></blockquote><p>Indicating if remoteStorage is currently connected.</p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><h4 id="defined-in-5" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-5" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/a199c15fb409a17fd444aa7fba846e7fecc5981d/src/remotestorage.ts#L441" target="_blank" rel="noreferrer">remotestorage.ts:441</a></p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="addeventlistener" tabindex="-1">addEventListener() <a class="header-anchor" href="#addeventlistener" aria-label="Permalink to &quot;addEventListener()&quot;">​</a></h3><blockquote><p><strong>addEventListener</strong>(<code>eventName</code>, <code>handler</code>): <code>void</code></p></blockquote><p>Install an event handler for the given event name</p><p>Usually called via <a href="#on"><code>on()</code></a></p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p>• <strong>eventName</strong>: <code>string</code></p><p>• <strong>handler</strong>: <a href="./../../eventhandling/type-aliases/EventHandler.html"><code>EventHandler</code></a></p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="defined-in-6" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-6" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/a199c15fb409a17fd444aa7fba846e7fecc5981d/src/eventhandling.ts#L29" target="_blank" rel="noreferrer">eventhandling.ts:29</a></p><hr><h3 id="addmodule" tabindex="-1">addModule() <a class="header-anchor" href="#addmodule" aria-label="Permalink to &quot;addModule()&quot;">​</a></h3><blockquote><p><strong>addModule</strong>(<code>module</code>): <code>void</code></p></blockquote><p>Add remoteStorage data module</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p>• <strong>module</strong>: <a href="./../interfaces/RSModule.html"><code>RSModule</code></a></p><p>A data module object</p><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="example-4" tabindex="-1">Example <a class="header-anchor" href="#example-4" aria-label="Permalink to &quot;Example&quot;">​</a></h4><p>Usually, you will import your data module from either a package or a local path. Let&#39;s say you want to use the <a href="https://github.com/raucao/remotestorage-module-bookmarks" target="_blank" rel="noreferrer">bookmarks module</a> in order to load data stored from <a href="https://webmarks.5apps.com" target="_blank" rel="noreferrer">Webmarks</a> for example:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Bookmarks </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;remotestorage-module-bookmarks&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">remoteStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addModule</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Bookmarks);</span></span></code></pre></div><p>You can also forgo this function entirely and add modules when creating your remoteStorage instance:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> remoteStorage</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RemoteStorage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ modules: [ Bookmarks ] });</span></span></code></pre></div><p>After the module has been added, it can be used like so:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">remoteStorage.bookmarks.archive.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getAll</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">bookmarks</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(bookmarks));</span></span></code></pre></div><h4 id="defined-in-7" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-7" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/a199c15fb409a17fd444aa7fba846e7fecc5981d/src/remotestorage.ts#L1189" target="_blank" rel="noreferrer">remotestorage.ts:1189</a></p><hr><h3 id="connect" tabindex="-1">connect() <a class="header-anchor" href="#connect" aria-label="Permalink to &quot;connect()&quot;">​</a></h3><blockquote><p><strong>connect</strong>(<code>userAddress</code>, <code>token</code>?): <code>void</code></p></blockquote><p>Connect to a remoteStorage server.</p><p>Discovers the WebFinger profile of the given user address and initiates the OAuth dance.</p><p>This method must be called <em>after</em> all required access has been claimed. When using the connect widget, it will call this method when the user clicks/taps the &quot;connect&quot; button.</p><p>Special cases:</p><ol><li><p>If a bearer token is supplied as second argument, the OAuth dance will be skipped and the supplied token be used instead. This is useful outside of browser environments, where the token has been acquired in a different way.</p></li><li><p>If the Webfinger profile for the given user address doesn&#39;t contain an auth URL, the library will assume that client and server have established authorization among themselves, which will omit bearer tokens in all requests later on. This is useful for example when using Kerberos and similar protocols.</p></li></ol><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p>• <strong>userAddress</strong>: <code>string</code></p><p>The user address (user@host) or URL to connect to.</p><p>• <strong>token?</strong>: <code>string</code></p><p>(optional) A bearer token acquired beforehand</p><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="example-5" tabindex="-1">Example <a class="header-anchor" href="#example-5" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">remoteStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">connect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;user@example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h4 id="defined-in-8" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-8" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/a199c15fb409a17fd444aa7fba846e7fecc5981d/src/remotestorage.ts#L543" target="_blank" rel="noreferrer">remotestorage.ts:543</a></p><hr><h3 id="disablelog" tabindex="-1">disableLog() <a class="header-anchor" href="#disablelog" aria-label="Permalink to &quot;disableLog()&quot;">​</a></h3><blockquote><p><strong>disableLog</strong>(): <code>void</code></p></blockquote><p>Disable remoteStorage debug logging</p><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="defined-in-9" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-9" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/a199c15fb409a17fd444aa7fba846e7fecc5981d/src/remotestorage.ts#L727" target="_blank" rel="noreferrer">remotestorage.ts:727</a></p><hr><h3 id="disconnect" tabindex="-1">disconnect() <a class="header-anchor" href="#disconnect" aria-label="Permalink to &quot;disconnect()&quot;">​</a></h3><blockquote><p><strong>disconnect</strong>(): <code>void</code></p></blockquote><p>&quot;Disconnect&quot; from remote server to terminate current session.</p><p>This method clears all stored settings and deletes the entire local cache.</p><h4 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="defined-in-10" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-10" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/a199c15fb409a17fd444aa7fba846e7fecc5981d/src/remotestorage.ts#L629" target="_blank" rel="noreferrer">remotestorage.ts:629</a></p><hr><h3 id="enablelog" tabindex="-1">enableLog() <a class="header-anchor" href="#enablelog" aria-label="Permalink to &quot;enableLog()&quot;">​</a></h3><blockquote><p><strong>enableLog</strong>(): <code>void</code></p></blockquote><p>Enable remoteStorage debug logging.</p><p>Usually done when instantiating remoteStorage:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> remoteStorage</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RemoteStorage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ logging: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span></code></pre></div><h4 id="returns-6" tabindex="-1">Returns <a class="header-anchor" href="#returns-6" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="defined-in-11" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-11" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/a199c15fb409a17fd444aa7fba846e7fecc5981d/src/remotestorage.ts#L720" target="_blank" rel="noreferrer">remotestorage.ts:720</a></p><hr><h3 id="getbackgroundsyncinterval" tabindex="-1">getBackgroundSyncInterval() <a class="header-anchor" href="#getbackgroundsyncinterval" aria-label="Permalink to &quot;getBackgroundSyncInterval()&quot;">​</a></h3><blockquote><p><strong>getBackgroundSyncInterval</strong>(): <code>number</code></p></blockquote><p>Get the value of the sync interval when application is in the background</p><h4 id="returns-7" tabindex="-1">Returns <a class="header-anchor" href="#returns-7" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>number</code></p><p>A number of milliseconds</p><h4 id="example-6" tabindex="-1">Example <a class="header-anchor" href="#example-6" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">remoteStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getBackgroundSyncInterval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 60000</span></span></code></pre></div><h4 id="defined-in-12" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-12" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/a199c15fb409a17fd444aa7fba846e7fecc5981d/src/remotestorage.ts#L1024" target="_blank" rel="noreferrer">remotestorage.ts:1024</a></p><hr><h3 id="getcurrentsyncinterval" tabindex="-1">getCurrentSyncInterval() <a class="header-anchor" href="#getcurrentsyncinterval" aria-label="Permalink to &quot;getCurrentSyncInterval()&quot;">​</a></h3><blockquote><p><strong>getCurrentSyncInterval</strong>(): <code>number</code></p></blockquote><p>Get the value of the current sync interval. Can be background or foreground, custom or default.</p><h4 id="returns-8" tabindex="-1">Returns <a class="header-anchor" href="#returns-8" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>number</code></p><p>number of milliseconds</p><h4 id="example-7" tabindex="-1">Example <a class="header-anchor" href="#example-7" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">remoteStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getCurrentSyncInterval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 15000</span></span></code></pre></div><h4 id="defined-in-13" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-13" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/a199c15fb409a17fd444aa7fba846e7fecc5981d/src/remotestorage.ts#L1060" target="_blank" rel="noreferrer">remotestorage.ts:1060</a></p><hr><h3 id="getrequesttimeout" tabindex="-1">getRequestTimeout() <a class="header-anchor" href="#getrequesttimeout" aria-label="Permalink to &quot;getRequestTimeout()&quot;">​</a></h3><blockquote><p><strong>getRequestTimeout</strong>(): <code>number</code></p></blockquote><p>Get the value of the current network request timeout</p><h4 id="returns-9" tabindex="-1">Returns <a class="header-anchor" href="#returns-9" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>number</code></p><p>A number of milliseconds</p><h4 id="example-8" tabindex="-1">Example <a class="header-anchor" href="#example-8" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">remoteStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getRequestTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 30000</span></span></code></pre></div><h4 id="defined-in-14" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-14" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/a199c15fb409a17fd444aa7fba846e7fecc5981d/src/remotestorage.ts#L1073" target="_blank" rel="noreferrer">remotestorage.ts:1073</a></p><hr><h3 id="getsyncinterval" tabindex="-1">getSyncInterval() <a class="header-anchor" href="#getsyncinterval" aria-label="Permalink to &quot;getSyncInterval()&quot;">​</a></h3><blockquote><p><strong>getSyncInterval</strong>(): <code>number</code></p></blockquote><p>Get the value of the sync interval when application is in the foreground</p><h4 id="returns-10" tabindex="-1">Returns <a class="header-anchor" href="#returns-10" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>number</code></p><p>A number of milliseconds</p><h4 id="example-9" tabindex="-1">Example <a class="header-anchor" href="#example-9" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">remoteStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getSyncInterval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 10000</span></span></code></pre></div><h4 id="defined-in-15" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-15" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/a199c15fb409a17fd444aa7fba846e7fecc5981d/src/remotestorage.ts#L990" target="_blank" rel="noreferrer">remotestorage.ts:990</a></p><hr><h3 id="on" tabindex="-1">on() <a class="header-anchor" href="#on" aria-label="Permalink to &quot;on()&quot;">​</a></h3><blockquote><p><strong>on</strong>(<code>eventName</code>, <code>handler</code>): <code>void</code></p></blockquote><p>Register an event handler for the given event name</p><p>Alias for <a href="./RemoteStorage.html#addeventlistener">addEventListener</a></p><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p>• <strong>eventName</strong>: <code>string</code></p><p>Name of the event</p><p>• <strong>handler</strong>: <a href="./../../eventhandling/type-aliases/EventHandler.html"><code>EventHandler</code></a></p><p>Function to handle the event</p><h4 id="returns-11" tabindex="-1">Returns <a class="header-anchor" href="#returns-11" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="example-10" tabindex="-1">Example <a class="header-anchor" href="#example-10" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">remoteStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;connected&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;storage account has been connected&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h4 id="defined-in-16" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-16" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/a199c15fb409a17fd444aa7fba846e7fecc5981d/src/eventhandling.ts#L55" target="_blank" rel="noreferrer">eventhandling.ts:55</a></p><hr><h3 id="onchange" tabindex="-1">onChange() <a class="header-anchor" href="#onchange" aria-label="Permalink to &quot;onChange()&quot;">​</a></h3><blockquote><p><strong>onChange</strong>(<code>path</code>, <code>handler</code>): <code>void</code></p></blockquote><p>Add a <code>change</code> event handler for the given path. Whenever a change happens (as determined by the local backend, such as e.g. <code>RemoteStorage.IndexedDB</code>), and the affected path is equal to or below the given &#39;path&#39;, the given handler is called.</p><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p>You should usually not use this method, but instead use the <code>change</code> events provided by <a href="./../../baseclient/classes/BaseClient.html">BaseClient</a>.</p></div><h4 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p>• <strong>path</strong>: <code>string</code></p><p>Absolute path to attach handler to</p><p>• <strong>handler</strong>: <a href="./../../eventhandling/type-aliases/EventHandler.html"><code>EventHandler</code></a></p><p>A function to handle the change</p><h4 id="returns-12" tabindex="-1">Returns <a class="header-anchor" href="#returns-12" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="example-11" tabindex="-1">Example <a class="header-anchor" href="#example-11" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">remoteStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onChange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/bookmarks/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // your code here</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h4 id="defined-in-17" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-17" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/a199c15fb409a17fd444aa7fba846e7fecc5981d/src/remotestorage.ts#L704" target="_blank" rel="noreferrer">remotestorage.ts:704</a></p><hr><h3 id="reconnect" tabindex="-1">reconnect() <a class="header-anchor" href="#reconnect" aria-label="Permalink to &quot;reconnect()&quot;">​</a></h3><blockquote><p><strong>reconnect</strong>(): <code>void</code></p></blockquote><p>Reconnect the remote server to get a new authorization.</p><p>Useful when not using the connect widget and encountering an <code>Unauthorized</code> event.</p><h4 id="returns-13" tabindex="-1">Returns <a class="header-anchor" href="#returns-13" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="defined-in-18" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-18" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/a199c15fb409a17fd444aa7fba846e7fecc5981d/src/remotestorage.ts#L613" target="_blank" rel="noreferrer">remotestorage.ts:613</a></p><hr><h3 id="removeeventlistener" tabindex="-1">removeEventListener() <a class="header-anchor" href="#removeeventlistener" aria-label="Permalink to &quot;removeEventListener()&quot;">​</a></h3><blockquote><p><strong>removeEventListener</strong>(<code>eventName</code>, <code>handler</code>): <code>void</code></p></blockquote><p>Remove a previously installed event handler</p><h4 id="parameters-5" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-5" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p>• <strong>eventName</strong>: <code>string</code></p><p>• <strong>handler</strong>: <a href="./../../eventhandling/type-aliases/EventHandler.html"><code>EventHandler</code></a></p><h4 id="returns-14" tabindex="-1">Returns <a class="header-anchor" href="#returns-14" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="defined-in-19" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-19" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/a199c15fb409a17fd444aa7fba846e7fecc5981d/src/eventhandling.ts#L62" target="_blank" rel="noreferrer">eventhandling.ts:62</a></p><hr><h3 id="scope" tabindex="-1">scope() <a class="header-anchor" href="#scope" aria-label="Permalink to &quot;scope()&quot;">​</a></h3><blockquote><p><strong>scope</strong>(<code>path</code>): <a href="./../../baseclient/classes/BaseClient.html"><code>BaseClient</code></a></p></blockquote><p>This method allows you to quickly instantiate a BaseClient, which you can use to directly read and manipulate data in the connected storage account.</p><p>Please use this method only for debugging and development, and choose or create a <a href="./../../../data-modules/">data module</a> for your app to use.</p><h4 id="parameters-6" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-6" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p>• <strong>path</strong>: <code>string</code></p><p>The base directory of the BaseClient that will be returned (with a leading and a trailing slash)</p><h4 id="returns-15" tabindex="-1">Returns <a class="header-anchor" href="#returns-15" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./../../baseclient/classes/BaseClient.html"><code>BaseClient</code></a></p><p>A client with the specified scope (category/base directory)</p><h4 id="example-12" tabindex="-1">Example <a class="header-anchor" href="#example-12" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">remoteStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scope</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/pictures/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getListing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">remoteStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scope</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/public/pictures/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getListing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h4 id="defined-in-20" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-20" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/a199c15fb409a17fd444aa7fba846e7fecc5981d/src/remotestorage.ts#L971" target="_blank" rel="noreferrer">remotestorage.ts:971</a></p><hr><h3 id="setapikeys" tabindex="-1">setApiKeys() <a class="header-anchor" href="#setapikeys" aria-label="Permalink to &quot;setApiKeys()&quot;">​</a></h3><blockquote><p><strong>setApiKeys</strong>(<code>apiKeys</code>): <code>boolean</code> | <code>void</code></p></blockquote><p>Set the OAuth key/ID for GoogleDrive and/or Dropbox backend support.</p><h4 id="parameters-7" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-7" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p>• <strong>apiKeys</strong></p><p>A config object</p><p>• <strong>apiKeys.dropbox</strong>: <code>string</code></p><p>• <strong>apiKeys.googledrive</strong>: <code>string</code></p><h4 id="returns-16" tabindex="-1">Returns <a class="header-anchor" href="#returns-16" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code> | <code>void</code></p><h4 id="example-13" tabindex="-1">Example <a class="header-anchor" href="#example-13" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">remoteStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setApiKeys</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  dropbox: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;your-app-key&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  googledrive: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;your-client-id&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h4 id="defined-in-21" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-21" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/a199c15fb409a17fd444aa7fba846e7fecc5981d/src/remotestorage.ts#L751" target="_blank" rel="noreferrer">remotestorage.ts:751</a></p><hr><h3 id="setbackgroundsyncinterval" tabindex="-1">setBackgroundSyncInterval() <a class="header-anchor" href="#setbackgroundsyncinterval" aria-label="Permalink to &quot;setBackgroundSyncInterval()&quot;">​</a></h3><blockquote><p><strong>setBackgroundSyncInterval</strong>(<code>interval</code>): <code>void</code></p></blockquote><p>Set the value of the sync interval when the application is in the background</p><h4 id="parameters-8" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-8" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p>• <strong>interval</strong>: <code>number</code></p><p>Sync interval in milliseconds (between 2000 and 3600000 [1 hour])</p><h4 id="returns-17" tabindex="-1">Returns <a class="header-anchor" href="#returns-17" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="example-14" tabindex="-1">Example <a class="header-anchor" href="#example-14" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">remoteStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setBackgroundSyncInterval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">90000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h4 id="defined-in-22" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-22" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/a199c15fb409a17fd444aa7fba846e7fecc5981d/src/remotestorage.ts#L1037" target="_blank" rel="noreferrer">remotestorage.ts:1037</a></p><hr><h3 id="setcordovaredirecturi" tabindex="-1">setCordovaRedirectUri() <a class="header-anchor" href="#setcordovaredirecturi" aria-label="Permalink to &quot;setCordovaRedirectUri()&quot;">​</a></h3><blockquote><p><strong>setCordovaRedirectUri</strong>(<code>uri</code>): <code>void</code></p></blockquote><p>Set redirect URI to be used for the OAuth redirect within the in-app-browser window in Cordova apps. See <a href="./../../../cordova.html">Usage in Cordova apps</a> for details.</p><h4 id="parameters-9" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-9" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p>• <strong>uri</strong>: <code>string</code></p><p>A valid HTTP(S) URI</p><h4 id="returns-18" tabindex="-1">Returns <a class="header-anchor" href="#returns-18" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="example-15" tabindex="-1">Example <a class="header-anchor" href="#example-15" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">remoteStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setCordovaRedirectUri</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://app.example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h4 id="defined-in-23" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-23" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/a199c15fb409a17fd444aa7fba846e7fecc5981d/src/remotestorage.ts#L797" target="_blank" rel="noreferrer">remotestorage.ts:797</a></p><hr><h3 id="setrequesttimeout" tabindex="-1">setRequestTimeout() <a class="header-anchor" href="#setrequesttimeout" aria-label="Permalink to &quot;setRequestTimeout()&quot;">​</a></h3><blockquote><p><strong>setRequestTimeout</strong>(<code>timeout</code>): <code>void</code></p></blockquote><p>Set the timeout for network requests.</p><h4 id="parameters-10" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-10" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p>• <strong>timeout</strong>: <code>number</code></p><p>Timeout in milliseconds</p><h4 id="returns-19" tabindex="-1">Returns <a class="header-anchor" href="#returns-19" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="example-16" tabindex="-1">Example <a class="header-anchor" href="#example-16" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">remoteStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setRequestTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h4 id="defined-in-24" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-24" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/a199c15fb409a17fd444aa7fba846e7fecc5981d/src/remotestorage.ts#L1085" target="_blank" rel="noreferrer">remotestorage.ts:1085</a></p><hr><h3 id="setsyncinterval" tabindex="-1">setSyncInterval() <a class="header-anchor" href="#setsyncinterval" aria-label="Permalink to &quot;setSyncInterval()&quot;">​</a></h3><blockquote><p><strong>setSyncInterval</strong>(<code>interval</code>): <code>void</code></p></blockquote><p>Set the value of the sync interval when application is in the foreground</p><h4 id="parameters-11" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-11" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p>• <strong>interval</strong>: <code>number</code></p><p>Sync interval in milliseconds (between 2000 and 3600000 [1 hour])</p><h4 id="returns-20" tabindex="-1">Returns <a class="header-anchor" href="#returns-20" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="example-17" tabindex="-1">Example <a class="header-anchor" href="#example-17" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">remoteStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setSyncInterval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h4 id="defined-in-25" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-25" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/a199c15fb409a17fd444aa7fba846e7fecc5981d/src/remotestorage.ts#L1002" target="_blank" rel="noreferrer">remotestorage.ts:1002</a></p><hr><h3 id="startsync" tabindex="-1">startSync() <a class="header-anchor" href="#startsync" aria-label="Permalink to &quot;startSync()&quot;">​</a></h3><blockquote><p><strong>startSync</strong>(): <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><p>Start synchronization with remote storage, downloading and uploading any changes within the cached paths.</p><p>Please consider: local changes will attempt sync immediately, and remote changes should also be synced timely when using library defaults. So this is mostly useful for letting users sync manually, when pressing a sync button for example. This might feel safer to them sometimes, esp. when shifting between offline and online a lot.</p><h4 id="returns-21" tabindex="-1">Returns <a class="header-anchor" href="#returns-21" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><p>A Promise which resolves when the sync has finished</p><h4 id="defined-in-26" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-26" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/a199c15fb409a17fd444aa7fba846e7fecc5981d/src/remotestorage.ts#L1126" target="_blank" rel="noreferrer">remotestorage.ts:1126</a></p><hr><h3 id="stopsync" tabindex="-1">stopSync() <a class="header-anchor" href="#stopsync" aria-label="Permalink to &quot;stopSync()&quot;">​</a></h3><blockquote><p><strong>stopSync</strong>(): <code>void</code></p></blockquote><p>Stop the periodic synchronization.</p><h4 id="returns-22" tabindex="-1">Returns <a class="header-anchor" href="#returns-22" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="defined-in-27" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-27" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/a199c15fb409a17fd444aa7fba846e7fecc5981d/src/remotestorage.ts#L1139" target="_blank" rel="noreferrer">remotestorage.ts:1139</a></p>`,361),r=[n];function o(l,h,d,c,p,k){return s(),a("div",null,r)}const b=e(i,[["render",o]]);export{g as __pageData,b as default};
