import{_ as e,c as r,o as t,a4 as a}from"./chunks/framework.Bi9zwDUp.js";const m=JSON.parse('{"title":"Class: RemoteStorage","description":"","frontmatter":{},"headers":[],"relativePath":"rs.js/docs/api/remotestorage/classes/RemoteStorage.md","filePath":"rs.js/docs/api/remotestorage/classes/RemoteStorage.md"}'),o={name:"rs.js/docs/api/remotestorage/classes/RemoteStorage.md"},s=a('<h1 id="class-remotestorage" tabindex="-1">Class: RemoteStorage <a class="header-anchor" href="#class-remotestorage" aria-label="Permalink to &quot;Class: RemoteStorage&quot;">​</a></h1><p>Constructor for the remoteStorage object/instance</p><p>This class primarily contains feature detection code and convenience API.</p><p>Depending on which features are built in, it contains different attributes and functions. See the individual features for more information.</p><h2 id="param" tabindex="-1">Param <a class="header-anchor" href="#param" aria-label="Permalink to &quot;Param&quot;">​</a></h2><p>an optional configuration object</p><h2 id="extends" tabindex="-1">Extends <a class="header-anchor" href="#extends" aria-label="Permalink to &quot;Extends&quot;">​</a></h2><ul><li><code>EventHandling</code></li></ul><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="connect" tabindex="-1">connect() <a class="header-anchor" href="#connect" aria-label="Permalink to &quot;connect()&quot;">​</a></h3><blockquote><p><strong>connect</strong>(<code>userAddress</code>, <code>token</code>?): <code>void</code></p></blockquote><p>Connect to a remoteStorage server.</p><p>Discovers the WebFinger profile of the given user address and initiates the OAuth dance.</p><p>This method must be called <em>after</em> all required access has been claimed. When using the connect widget, it will call this method itself.</p><p>Special cases:</p><ol><li><p>If a bearer token is supplied as second argument, the OAuth dance will be skipped and the supplied token be used instead. This is useful outside of browser environments, where the token has been acquired in a different way.</p></li><li><p>If the Webfinger profile for the given user address doesn&#39;t contain an auth URL, the library will assume that client and server have established authorization among themselves, which will omit bearer tokens in all requests later on. This is useful for example when using Kerberos and similar protocols.</p></li></ol><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p>• <strong>userAddress</strong>: <code>string</code></p><p>The user address (user@host) or URL to connect to.</p><p>• <strong>token?</strong>: <code>string</code></p><p>(optional) A bearer token acquired beforehand</p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="source" tabindex="-1">Source <a class="header-anchor" href="#source" aria-label="Permalink to &quot;Source&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/e2bff1869cf784e0b2712889b7313d816e139b0c/src/remotestorage.ts#L377" target="_blank" rel="noreferrer">remotestorage.ts:377</a></p><hr><h3 id="disablelog" tabindex="-1">disableLog() <a class="header-anchor" href="#disablelog" aria-label="Permalink to &quot;disableLog()&quot;">​</a></h3><blockquote><p><strong>disableLog</strong>(): <code>void</code></p></blockquote><p>TODO: do we still need this, now that we always instantiate the prototype?</p><p>Disable remoteStorage logging</p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="source-1" tabindex="-1">Source <a class="header-anchor" href="#source-1" aria-label="Permalink to &quot;Source&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/e2bff1869cf784e0b2712889b7313d816e139b0c/src/remotestorage.ts#L550" target="_blank" rel="noreferrer">remotestorage.ts:550</a></p><hr><h3 id="disconnect" tabindex="-1">disconnect() <a class="header-anchor" href="#disconnect" aria-label="Permalink to &quot;disconnect()&quot;">​</a></h3><blockquote><p><strong>disconnect</strong>(): <code>void</code></p></blockquote><p>&quot;Disconnect&quot; from remote server to terminate current session.</p><p>This method clears all stored settings and deletes the entire local cache.</p><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="source-2" tabindex="-1">Source <a class="header-anchor" href="#source-2" aria-label="Permalink to &quot;Source&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/e2bff1869cf784e0b2712889b7313d816e139b0c/src/remotestorage.ts#L460" target="_blank" rel="noreferrer">remotestorage.ts:460</a></p><hr><h3 id="enablelog" tabindex="-1">enableLog() <a class="header-anchor" href="#enablelog" aria-label="Permalink to &quot;enableLog()&quot;">​</a></h3><blockquote><p><strong>enableLog</strong>(): <code>void</code></p></blockquote><p>TODO: do we still need this, now that we always instantiate the prototype?</p><p>Enable remoteStorage logging.</p><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="source-3" tabindex="-1">Source <a class="header-anchor" href="#source-3" aria-label="Permalink to &quot;Source&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/e2bff1869cf784e0b2712889b7313d816e139b0c/src/remotestorage.ts#L541" target="_blank" rel="noreferrer">remotestorage.ts:541</a></p><hr><h3 id="getbackgroundsyncinterval" tabindex="-1">getBackgroundSyncInterval() <a class="header-anchor" href="#getbackgroundsyncinterval" aria-label="Permalink to &quot;getBackgroundSyncInterval()&quot;">​</a></h3><blockquote><p><strong>getBackgroundSyncInterval</strong>(): <code>number</code></p></blockquote><p>Get the value of the sync interval when application is in the background</p><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>number</code></p><p>A number of milliseconds</p><h4 id="source-4" tabindex="-1">Source <a class="header-anchor" href="#source-4" aria-label="Permalink to &quot;Source&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/e2bff1869cf784e0b2712889b7313d816e139b0c/src/remotestorage.ts#L820" target="_blank" rel="noreferrer">remotestorage.ts:820</a></p><hr><h3 id="getcurrentsyncinterval" tabindex="-1">getCurrentSyncInterval() <a class="header-anchor" href="#getcurrentsyncinterval" aria-label="Permalink to &quot;getCurrentSyncInterval()&quot;">​</a></h3><blockquote><p><strong>getCurrentSyncInterval</strong>(): <code>number</code></p></blockquote><p>Get the value of the current sync interval. Can be background or foreground, custom or default.</p><h4 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>number</code></p><p>A number of milliseconds</p><h4 id="source-5" tabindex="-1">Source <a class="header-anchor" href="#source-5" aria-label="Permalink to &quot;Source&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/e2bff1869cf784e0b2712889b7313d816e139b0c/src/remotestorage.ts#L845" target="_blank" rel="noreferrer">remotestorage.ts:845</a></p><hr><h3 id="getrequesttimeout" tabindex="-1">getRequestTimeout() <a class="header-anchor" href="#getrequesttimeout" aria-label="Permalink to &quot;getRequestTimeout()&quot;">​</a></h3><blockquote><p><strong>getRequestTimeout</strong>(): <code>number</code></p></blockquote><p>Get the value of the current network request timeout</p><h4 id="returns-6" tabindex="-1">Returns <a class="header-anchor" href="#returns-6" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>number</code></p><p>A number of milliseconds</p><h4 id="source-6" tabindex="-1">Source <a class="header-anchor" href="#source-6" aria-label="Permalink to &quot;Source&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/e2bff1869cf784e0b2712889b7313d816e139b0c/src/remotestorage.ts#L854" target="_blank" rel="noreferrer">remotestorage.ts:854</a></p><hr><h3 id="getsyncinterval" tabindex="-1">getSyncInterval() <a class="header-anchor" href="#getsyncinterval" aria-label="Permalink to &quot;getSyncInterval()&quot;">​</a></h3><blockquote><p><strong>getSyncInterval</strong>(): <code>number</code></p></blockquote><p>Get the value of the sync interval when application is in the foreground</p><h4 id="returns-7" tabindex="-1">Returns <a class="header-anchor" href="#returns-7" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>number</code></p><p>A number of milliseconds</p><h4 id="source-7" tabindex="-1">Source <a class="header-anchor" href="#source-7" aria-label="Permalink to &quot;Source&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/e2bff1869cf784e0b2712889b7313d816e139b0c/src/remotestorage.ts#L797" target="_blank" rel="noreferrer">remotestorage.ts:797</a></p><hr><h3 id="log" tabindex="-1">log() <a class="header-anchor" href="#log" aria-label="Permalink to &quot;log()&quot;">​</a></h3><blockquote><p><strong>log</strong>(...<code>args</code>): <code>void</code></p></blockquote><p>log</p><p>The same as &lt;RemoteStorage.log&gt;.</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p>• ...<strong>args</strong>: <code>any</code>[]</p><h4 id="returns-8" tabindex="-1">Returns <a class="header-anchor" href="#returns-8" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="source-8" tabindex="-1">Source <a class="header-anchor" href="#source-8" aria-label="Permalink to &quot;Source&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/e2bff1869cf784e0b2712889b7313d816e139b0c/src/remotestorage.ts#L559" target="_blank" rel="noreferrer">remotestorage.ts:559</a></p><hr><h3 id="onchange" tabindex="-1">onChange() <a class="header-anchor" href="#onchange" aria-label="Permalink to &quot;onChange()&quot;">​</a></h3><blockquote><p><strong>onChange</strong>(<code>path</code>, <code>handler</code>): <code>void</code></p></blockquote><p>Add a &quot;change&quot; event handler to the given path. Whenever a &quot;change&quot; happens (as determined by the backend, such as e.g. &lt;RemoteStorage.IndexedDB&gt;) and the affected path is equal to or below the given &#39;path&#39;, the given handler is called.</p><p>You should usually not use this method directly, but instead use the &quot;change&quot; events provided by :doc:<code>BaseClient &lt;/js-api/base-client&gt;</code></p><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p>• <strong>path</strong>: <code>string</code></p><p>Absolute path to attach handler to</p><p>• <strong>handler</strong>: <code>any</code></p><p>Handler function</p><h4 id="returns-9" tabindex="-1">Returns <a class="header-anchor" href="#returns-9" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="source-9" tabindex="-1">Source <a class="header-anchor" href="#source-9" aria-label="Permalink to &quot;Source&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/e2bff1869cf784e0b2712889b7313d816e139b0c/src/remotestorage.ts#L529" target="_blank" rel="noreferrer">remotestorage.ts:529</a></p><hr><h3 id="reconnect" tabindex="-1">reconnect() <a class="header-anchor" href="#reconnect" aria-label="Permalink to &quot;reconnect()&quot;">​</a></h3><blockquote><p><strong>reconnect</strong>(): <code>void</code></p></blockquote><p>Reconnect the remote server to get a new authorization.</p><h4 id="returns-10" tabindex="-1">Returns <a class="header-anchor" href="#returns-10" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="source-10" tabindex="-1">Source <a class="header-anchor" href="#source-10" aria-label="Permalink to &quot;Source&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/e2bff1869cf784e0b2712889b7313d816e139b0c/src/remotestorage.ts#L444" target="_blank" rel="noreferrer">remotestorage.ts:444</a></p><hr><h3 id="scope" tabindex="-1">scope() <a class="header-anchor" href="#scope" aria-label="Permalink to &quot;scope()&quot;">​</a></h3><blockquote><p><strong>scope</strong>(<code>path</code>): <a href="./../../baseclient/classes/BaseClient.html"><code>BaseClient</code></a></p></blockquote><p>This method enables you to quickly instantiate a BaseClient, which you can use to directly read and manipulate data in the connected storage account.</p><p>Please use this method only for debugging and development, and choose or create a :doc:<code>data module &lt;/data-modules&gt;</code> for your app to use.</p><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p>• <strong>path</strong>: <code>string</code></p><p>The base directory of the BaseClient that will be returned (with a leading and a trailing slash)</p><h4 id="returns-11" tabindex="-1">Returns <a class="header-anchor" href="#returns-11" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./../../baseclient/classes/BaseClient.html"><code>BaseClient</code></a></p><p>A client with the specified scope (category/base directory)</p><h4 id="source-11" tabindex="-1">Source <a class="header-anchor" href="#source-11" aria-label="Permalink to &quot;Source&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/e2bff1869cf784e0b2712889b7313d816e139b0c/src/remotestorage.ts#L782" target="_blank" rel="noreferrer">remotestorage.ts:782</a></p><hr><h3 id="setapikeys" tabindex="-1">setApiKeys() <a class="header-anchor" href="#setapikeys" aria-label="Permalink to &quot;setApiKeys()&quot;">​</a></h3><blockquote><p><strong>setApiKeys</strong>(<code>apiKeys</code>): <code>boolean</code> | <code>void</code></p></blockquote><p>Set the OAuth key/ID for either GoogleDrive or Dropbox backend support.</p><h4 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p>• <strong>apiKeys</strong></p><p>A config object with these properties:</p><p>• <strong>apiKeys.dropbox</strong>: <code>string</code></p><p>• <strong>apiKeys.googledrive</strong>: <code>string</code></p><h4 id="returns-12" tabindex="-1">Returns <a class="header-anchor" href="#returns-12" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code> | <code>void</code></p><h4 id="source-12" tabindex="-1">Source <a class="header-anchor" href="#source-12" aria-label="Permalink to &quot;Source&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/e2bff1869cf784e0b2712889b7313d816e139b0c/src/remotestorage.ts#L570" target="_blank" rel="noreferrer">remotestorage.ts:570</a></p><hr><h3 id="setbackgroundsyncinterval" tabindex="-1">setBackgroundSyncInterval() <a class="header-anchor" href="#setbackgroundsyncinterval" aria-label="Permalink to &quot;setBackgroundSyncInterval()&quot;">​</a></h3><blockquote><p><strong>setBackgroundSyncInterval</strong>(<code>interval</code>): <code>void</code></p></blockquote><p>Set the value of the sync interval when the application is in the background</p><h4 id="parameters-5" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-5" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p>• <strong>interval</strong>: <code>number</code></p><p>Sync interval in milliseconds (between 2000 and 3600000 [1 hour])</p><h4 id="returns-13" tabindex="-1">Returns <a class="header-anchor" href="#returns-13" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="source-13" tabindex="-1">Source <a class="header-anchor" href="#source-13" aria-label="Permalink to &quot;Source&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/e2bff1869cf784e0b2712889b7313d816e139b0c/src/remotestorage.ts#L830" target="_blank" rel="noreferrer">remotestorage.ts:830</a></p><hr><h3 id="setcordovaredirecturi" tabindex="-1">setCordovaRedirectUri() <a class="header-anchor" href="#setcordovaredirecturi" aria-label="Permalink to &quot;setCordovaRedirectUri()&quot;">​</a></h3><blockquote><p><strong>setCordovaRedirectUri</strong>(<code>uri</code>): <code>void</code></p></blockquote><p>Set redirect URI to be used for the OAuth redirect within the in-app-browser window in Cordova apps.</p><h4 id="parameters-6" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-6" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p>• <strong>uri</strong>: <code>string</code></p><p>A valid HTTP(S) URI</p><h4 id="returns-14" tabindex="-1">Returns <a class="header-anchor" href="#returns-14" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="source-14" tabindex="-1">Source <a class="header-anchor" href="#source-14" aria-label="Permalink to &quot;Source&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/e2bff1869cf784e0b2712889b7313d816e139b0c/src/remotestorage.ts#L612" target="_blank" rel="noreferrer">remotestorage.ts:612</a></p><hr><h3 id="setrequesttimeout" tabindex="-1">setRequestTimeout() <a class="header-anchor" href="#setrequesttimeout" aria-label="Permalink to &quot;setRequestTimeout()&quot;">​</a></h3><blockquote><p><strong>setRequestTimeout</strong>(<code>timeout</code>): <code>void</code></p></blockquote><p>Set the timeout for network requests.</p><h4 id="parameters-7" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-7" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p>• <strong>timeout</strong>: <code>number</code></p><p>Timeout in milliseconds</p><h4 id="returns-15" tabindex="-1">Returns <a class="header-anchor" href="#returns-15" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="source-15" tabindex="-1">Source <a class="header-anchor" href="#source-15" aria-label="Permalink to &quot;Source&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/e2bff1869cf784e0b2712889b7313d816e139b0c/src/remotestorage.ts#L863" target="_blank" rel="noreferrer">remotestorage.ts:863</a></p><hr><h3 id="setsyncinterval" tabindex="-1">setSyncInterval() <a class="header-anchor" href="#setsyncinterval" aria-label="Permalink to &quot;setSyncInterval()&quot;">​</a></h3><blockquote><p><strong>setSyncInterval</strong>(<code>interval</code>): <code>void</code></p></blockquote><p>Set the value of the sync interval when application is in the foreground</p><h4 id="parameters-8" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-8" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p>• <strong>interval</strong>: <code>number</code></p><p>Sync interval in milliseconds (between 2000 and 3600000 [1 hour])</p><h4 id="returns-16" tabindex="-1">Returns <a class="header-anchor" href="#returns-16" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="source-16" tabindex="-1">Source <a class="header-anchor" href="#source-16" aria-label="Permalink to &quot;Source&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/e2bff1869cf784e0b2712889b7313d816e139b0c/src/remotestorage.ts#L806" target="_blank" rel="noreferrer">remotestorage.ts:806</a></p><hr><h3 id="startsync" tabindex="-1">startSync() <a class="header-anchor" href="#startsync" aria-label="Permalink to &quot;startSync()&quot;">​</a></h3><blockquote><p><strong>startSync</strong>(): <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><p>Start synchronization with remote storage, downloading and uploading any changes within the cached paths.</p><p>Please consider: local changes will attempt sync immediately, and remote changes should also be synced timely when using library defaults. So this is mostly useful for letting users sync manually, when pressing a sync button for example. This might feel safer to them sometimes, esp. when shifting between offline and online a lot.</p><h4 id="returns-17" tabindex="-1">Returns <a class="header-anchor" href="#returns-17" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><p>A Promise which resolves when the sync has finished</p><h4 id="source-17" tabindex="-1">Source <a class="header-anchor" href="#source-17" aria-label="Permalink to &quot;Source&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/e2bff1869cf784e0b2712889b7313d816e139b0c/src/remotestorage.ts#L904" target="_blank" rel="noreferrer">remotestorage.ts:904</a></p><hr><h3 id="stopsync" tabindex="-1">stopSync() <a class="header-anchor" href="#stopsync" aria-label="Permalink to &quot;stopSync()&quot;">​</a></h3><blockquote><p><strong>stopSync</strong>(): <code>void</code></p></blockquote><p>Stop the periodic synchronization.</p><h4 id="returns-18" tabindex="-1">Returns <a class="header-anchor" href="#returns-18" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="source-18" tabindex="-1">Source <a class="header-anchor" href="#source-18" aria-label="Permalink to &quot;Source&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/e2bff1869cf784e0b2712889b7313d816e139b0c/src/remotestorage.ts#L917" target="_blank" rel="noreferrer">remotestorage.ts:917</a></p>',209),n=[s];function c(i,l,h,d,u,b){return t(),r("div",null,n)}const g=e(o,[["render",c]]);export{m as __pageData,g as default};
