import{_ as e,c as a,o as t,a4 as s}from"./chunks/framework.Bi9zwDUp.js";const k=JSON.parse('{"title":"Class: Caching","description":"","frontmatter":{},"headers":[],"relativePath":"rs.js/docs/api/caching/classes/Caching.md","filePath":"rs.js/docs/api/caching/classes/Caching.md"}'),i={name:"rs.js/docs/api/caching/classes/Caching.md"},r=s('<h1 id="class-caching" tabindex="-1">Class: Caching <a class="header-anchor" href="#class-caching" aria-label="Permalink to &quot;Class: Caching&quot;">​</a></h1><p>The caching class gets initialized as <code>remoteStorage.caching</code>, unless the <a href="./../../remotestorage/classes/RemoteStorage.html">RemoteStorage</a> instance is created with the option <code>cache: false</code>, disabling caching entirely.</p><p>In case your app hasn&#39;t explictly configured caching, the default setting is to cache any documents that have been either created or requested since your app loaded. For offline-capable apps, it usually makes sense to enable full, automatic caching of all documents, which is what <a href="./Caching.html#enable">enable</a> will do.</p><p>Enabling full caching has several benefits:</p><ul><li>Speed of access: locally cached data is available to the app a lot faster.</li><li>Offline mode: when all data is cached, it can also be read when your app starts while being offline.</li><li>Initial synchronization time: the amount of data your app caches can have a significant impact on its startup time.</li></ul><p>Caching can be configured on a per-path basis. When caching is enabled for a folder, it causes all subdirectories to be cached as well.</p><h2 id="caching-strategies" tabindex="-1">Caching strategies <a class="header-anchor" href="#caching-strategies" aria-label="Permalink to &quot;Caching strategies&quot;">​</a></h2><p>For each subtree, you can set the caching strategy to <code>ALL</code>, <code>SEEN</code> (default), and <code>FLUSH</code>.</p><ul><li><code>ALL</code> means that once all outgoing changes have been pushed, sync will start retrieving nodes to cache pro-actively. If a local copy exists of everything, it will check on each sync whether the ETag of the root folder changed, and retrieve remote changes if they exist.</li><li><code>SEEN</code> does this only for documents and folders that have been either read from or written to at least once since connecting to the current remote backend, plus their parent/ancestor folders up to the root (to make tree-based sync possible).</li><li><code>FLUSH</code> will only cache outgoing changes, and forget them as soon as they have been saved to remote successfully.</li></ul><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="checkpath" tabindex="-1">checkPath() <a class="header-anchor" href="#checkpath" aria-label="Permalink to &quot;checkPath()&quot;">​</a></h3><blockquote><p><strong>checkPath</strong>(<code>path</code>): <code>string</code></p></blockquote><p>Retrieve caching setting for a given path, or its next parent with a caching strategy set.</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p>• <strong>path</strong>: <code>string</code></p><p>Path to retrieve setting for</p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>string</code></p><p>caching strategy for the path</p><h4 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">remoteStorage.caching.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">checkPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;documents/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">strategy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`caching strategy for &#39;documents/&#39;: ${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">strategy</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // &quot;caching strategy for &#39;documents/&#39;: SEEN&quot;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h4 id="source" tabindex="-1">Source <a class="header-anchor" href="#source" aria-label="Permalink to &quot;Source&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/3de8d4bbce43ac52d4397495ab2bcfd7d34f7308/src/caching.ts#L157" target="_blank" rel="noreferrer">caching.ts:157</a></p><hr><h3 id="disable" tabindex="-1">disable() <a class="header-anchor" href="#disable" aria-label="Permalink to &quot;disable()&quot;">​</a></h3><blockquote><p><strong>disable</strong>(<code>path</code>): <code>void</code></p></blockquote><p>Disable caching for a given path.</p><p>Uses caching strategy <code>FLUSH</code> (meaning items are only cached until successfully pushed to the remote).</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p>• <strong>path</strong>: <code>string</code></p><p>Path to disable caching for</p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="example-1" tabindex="-1">Example <a class="header-anchor" href="#example-1" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">remoteStorage.caching.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">disable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/bookmarks/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h4 id="source-1" tabindex="-1">Source <a class="header-anchor" href="#source-1" aria-label="Permalink to &quot;Source&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/3de8d4bbce43ac52d4397495ab2bcfd7d34f7308/src/caching.ts#L124" target="_blank" rel="noreferrer">caching.ts:124</a></p><hr><h3 id="enable" tabindex="-1">enable() <a class="header-anchor" href="#enable" aria-label="Permalink to &quot;enable()&quot;">​</a></h3><blockquote><p><strong>enable</strong>(<code>path</code>): <code>void</code></p></blockquote><p>Enable caching for a given path.</p><p>Uses caching strategy <code>ALL</code>.</p><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p>• <strong>path</strong>: <code>string</code></p><p>Path to enable caching for</p><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="example-2" tabindex="-1">Example <a class="header-anchor" href="#example-2" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">remoteStorage.caching.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">enable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/bookmarks/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h4 id="source-2" tabindex="-1">Source <a class="header-anchor" href="#source-2" aria-label="Permalink to &quot;Source&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/3de8d4bbce43ac52d4397495ab2bcfd7d34f7308/src/caching.ts#L107" target="_blank" rel="noreferrer">caching.ts:107</a></p><hr><h3 id="onactivate" tabindex="-1">onActivate() <a class="header-anchor" href="#onactivate" aria-label="Permalink to &quot;onActivate()&quot;">​</a></h3><blockquote><p><strong>onActivate</strong>(<code>cb</code>): <code>void</code></p></blockquote><p>Set a callback for when caching is activated for a path.</p><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p>• <strong>cb</strong></p><p>Callback function</p><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="source-3" tabindex="-1">Source <a class="header-anchor" href="#source-3" aria-label="Permalink to &quot;Source&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/3de8d4bbce43ac52d4397495ab2bcfd7d34f7308/src/caching.ts#L133" target="_blank" rel="noreferrer">caching.ts:133</a></p><hr><h3 id="reset" tabindex="-1">reset() <a class="header-anchor" href="#reset" aria-label="Permalink to &quot;reset()&quot;">​</a></h3><blockquote><p><strong>reset</strong>(): <code>void</code></p></blockquote><p>Reset the state of caching by deleting all caching information.</p><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="example-3" tabindex="-1">Example <a class="header-anchor" href="#example-3" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">remoteStorage.caching.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">reset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h4 id="source-4" tabindex="-1">Source <a class="header-anchor" href="#source-4" aria-label="Permalink to &quot;Source&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/3de8d4bbce43ac52d4397495ab2bcfd7d34f7308/src/caching.ts#L175" target="_blank" rel="noreferrer">caching.ts:175</a></p><hr><h3 id="set" tabindex="-1">set() <a class="header-anchor" href="#set" aria-label="Permalink to &quot;set()&quot;">​</a></h3><blockquote><p><strong>set</strong>(<code>path</code>, <code>strategy</code>): <code>void</code></p></blockquote><p>Configure caching for a given path explicitly.</p><p>Not needed when using <code>enable</code>/<code>disable</code>.</p><h4 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p>• <strong>path</strong>: <code>string</code></p><p>Path to cache</p><p>• <strong>strategy</strong>: <code>&quot;ALL&quot;</code> | <code>&quot;SEEN&quot;</code> | <code>&quot;FLUSH&quot;</code></p><p>Caching strategy. One of &#39;ALL&#39;, &#39;SEEN&#39;, or &#39;FLUSH&#39;.</p><h4 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="example-4" tabindex="-1">Example <a class="header-anchor" href="#example-4" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">remoteStorage.caching.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/bookmarks/archive/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;SEEN&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h4 id="source-5" tabindex="-1">Source <a class="header-anchor" href="#source-5" aria-label="Permalink to &quot;Source&quot;">​</a></h4><p><a href="https://github.com/remotestorage/remotestorage.js/blob/3de8d4bbce43ac52d4397495ab2bcfd7d34f7308/src/caching.ts#L67" target="_blank" rel="noreferrer">caching.ts:67</a></p>',88),o=[r];function h(n,c,l,d,p,g){return t(),a("div",null,o)}const b=e(i,[["render",h]]);export{k as __pageData,b as default};
