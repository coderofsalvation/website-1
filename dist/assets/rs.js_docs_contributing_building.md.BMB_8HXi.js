import{_ as e,c as s,o as a,a4 as i}from"./chunks/framework.Bi9zwDUp.js";const k=JSON.parse('{"title":"Building","description":"","frontmatter":{},"headers":[],"relativePath":"rs.js/docs/contributing/building.md","filePath":"rs.js/docs/contributing/building.md"}'),t={name:"rs.js/docs/contributing/building.md"},o=i('<h1 id="building" tabindex="-1">Building <a class="header-anchor" href="#building" aria-label="Permalink to &quot;Building&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>We&#39;re using npm scripts for all common tasks, so check out the <code>scripts</code> section in <code>package.json</code> to learn about what they&#39;re doing exactly and what else is available.</p></div><h2 id="setup" tabindex="-1">Setup <a class="header-anchor" href="#setup" aria-label="Permalink to &quot;Setup&quot;">​</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><h2 id="development" tabindex="-1">Development <a class="header-anchor" href="#development" aria-label="Permalink to &quot;Development&quot;">​</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span></code></pre></div><p>This will watch <code>src/</code> for changes and build <code>remotestorage.js</code> in the <code>release/</code> directory every time you save a source file. Useful for testing rs.js changes with an app, for example by creating a symlink to <code>release/remotestorage.js</code>.</p><p>This build includes <a href="https://www.html5rocks.com/en/tutorials/developertools/sourcemaps/" target="_blank" rel="noreferrer">source maps</a> directly, so you can easily place <code>debugger</code> statements in the code and step through the actual source code in your browser&#39;s debugger tool.</p><h2 id="production" tabindex="-1">Production <a class="header-anchor" href="#production" aria-label="Permalink to &quot;Production&quot;">​</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build:release</span></span></code></pre></div><p>This creates the minified production build in <code>release/</code>.</p><p>It also creates a separate source maps file, which you can link to in case you want to (e.g. to improve exception tracking/debugging in production).</p>',12),n=[o];function l(c,r,d,p,h,u){return a(),s("div",null,n)}const b=e(t,[["render",l]]);export{k as __pageData,b as default};
