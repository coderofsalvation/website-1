import{_ as e,c as o,o as t,a4 as r}from"./chunks/framework.Bi9zwDUp.js";const u=JSON.parse('{"title":"Code overview","description":"","frontmatter":{},"headers":[],"relativePath":"rs.js/docs/contributing/internals/code-overview.md","filePath":"rs.js/docs/contributing/internals/code-overview.md"}'),c={name:"rs.js/docs/contributing/internals/code-overview.md"},a=r('<h1 id="code-overview" tabindex="-1">Code overview <a class="header-anchor" href="#code-overview" aria-label="Permalink to &quot;Code overview&quot;">â€‹</a></h1><p>The code of remoteStorage.js consists of files in the <code>src/</code> folder of this repo. These are built into a single file in the <code>release/</code> folder using <a href="http://webpack.github.io/" target="_blank" rel="noreferrer">webpack</a>. Unit tests live in the <code>test/</code> folder and are based on <a href="https://github.com/silverbucket/jaribu" target="_blank" rel="noreferrer">Jaribu</a>.</p><p>The structure of the code is based around feature loading. Most files in <code>src/</code> correspond to a feature, e.g. <code>discover.ts</code> to <code>RemoteStorage.Discover</code> or <code>caching.ts</code> to <code>RemoteStorage.Caching</code>.</p><p>The feature loading happens synchronously during the page load in <code>src/remotestorage.ts</code> (just including this script in your app will lead to executing the code that loads the features).</p><p>Most features load under their own name, but for <code>remoteStorage.local</code> a choice is made between <code>RemoteStorage.IndexedDB</code>, <code>RemoteStorage.LocalStorage</code> and <code>RemoteStorage.InMemoryCaching</code>, depending on what the environment (browser, node.js, Electron, WebView, or other) supports.</p><p>For <code>remoteStorage.local</code> we then also have a <a href="https://github.com/remotestorage/remotestorage.js/issues/777#issuecomment-57392440" target="_blank" rel="noreferrer">special mixin</a> called <code>src/cachinglayer.ts</code>, which mixes in some common functions into the object.</p><p>The <code>remoteStorage.remote</code> feature is not loaded immediately, but only when <code>RemoteStorage.Discover</code> calls <code>remoteStorage.setBackend()</code>, at which point a choice is made between <code>RemoteStorage.WireClient</code>, <code>RemoteStorage.GoogleDrive</code>, <code>RemoteStorage.Dropbox</code> (or any other future backend) to become the <code>remote</code>.</p>',7),d=[a];function i(s,n,l,h,m,g){return t(),o("div",null,d)}const f=e(c,[["render",i]]);export{u as __pageData,f as default};
