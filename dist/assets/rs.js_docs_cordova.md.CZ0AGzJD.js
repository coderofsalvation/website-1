import{_ as e,c as a,o as s,a5 as t}from"./chunks/framework.CTkMpXT2.js";const u=JSON.parse('{"title":"Usage in Cordova apps","titleTemplate":"remoteStorage.js","description":"","frontmatter":{},"headers":[],"relativePath":"rs.js/docs/cordova.md","filePath":"rs.js/docs/cordova.md"}'),i={name:"rs.js/docs/cordova.md"},o=t(`<h1 id="usage-in-cordova-apps" tabindex="-1">Usage in Cordova apps <a class="header-anchor" href="#usage-in-cordova-apps" aria-label="Permalink to &quot;Usage in Cordova apps&quot;">​</a></h1><p><a href="https://cordova.apache.org" target="_blank" rel="noreferrer">Apache Cordova</a> is a mobile development framework. It allows you to use standard web technologies - HTML5, CSS3, and JavaScript for cross-platform development. Applications execute within wrappers targeted to each platform, and rely on standards-compliant API bindings to access each device&#39;s capabilities such as sensors, data, network status, etc.</p><p>To use remoteStorage.js in a Cordova app, you need to have the <a href="https://cordova.apache.org/docs/en/latest/reference/cordova-plugin-inappbrowser/" target="_blank" rel="noreferrer">InAppBrowser plugin</a> installed.</p><p>Cordova apps are packaged for the different platforms and installed on the device. The app doesn&#39;t need to be hosted as a web app (although it can be as well). But for the remoteStorage connection to work, you need to provide a page that is accessible via a public URL. This will be used as the redirect URL during the OAuth flow.</p><p>When a user connects their storage, the OAuth dialog will open in an in-app browser window, set to show the address to prevent phishing attacks.</p><p>After the user authorizes the app, the server will redirect to the configured redirect URL with the authorization token added as a parameter. remoteStorage.js will intercept this redirect, extract the token from the URL and close the window.</p><p>So the user doesn&#39;t actually see the page of the redirect URL and it does&#39;t need to have the remoteStorage.js library included or have any special logic at all. But you should still make sure that it can be identified as belonging to your app. Storage providers will usually show the URL in the OAuth dialog, and they may also link to it (e.g. from the list of connected apps).</p><p>You can configure the redirect URL for your app, either by calling</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">remoteStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setCordovaRedirectUri</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://myapp.example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>or as config when creating your rs instance:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> remoteStorage</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RemoteStorage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  cordovaRedirectUri: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://myapp.example.com&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><p>No further action is needed and you can now use remoteStorage.js as with any other web app.</p><h2 id="google-drive-config" tabindex="-1">Google Drive config <a class="header-anchor" href="#google-drive-config" aria-label="Permalink to &quot;Google Drive config&quot;">​</a></h2><p>If you wish to use the optional Google Drive adapter, you need to configure a different user agent for your app. Otherwise the authorization page will show an error to the user.</p><p>In case you haven&#39;t set your own UA string already, here&#39;s how you can do it:</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">preference</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;OverrideUserAgent&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Mozilla/5.0 remoteStorage&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span></code></pre></div>`,16),r=[o];function n(p,h,l,d,c,g){return s(),a("div",null,r)}const v=e(i,[["render",n]]);export{u as __pageData,v as default};
